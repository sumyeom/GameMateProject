spring.application.name=gamemate

spring.config.import=optional:file:.env[.properties]

# Environment (prod, dev)
spring.profiles.active=dev

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# create, update, none, creat-drop
spring.jpa.database=mysql
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true

spring.jwt.secret=${JWT_SECRET}

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${OAUTH2_GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${OAUTH2_GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Kakao OAuth2
spring.security.oauth2.client.registration.kakao.client-id=${OAUTH2_KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret=${OAUTH2_KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

# Kakao Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

#oauth2.redirect.uri=http://localhost:3000/oauth2/callback
oauth2.success.redirect-uri=http://localhost:8080/oauth2-login-success.html
oauth2.failure.redirect-uri=http://localhost:8080/oauth2-login-failure.html
oauth2.set-password.redirect-uri=http://localhost:8080/oauth2-set-password.html

# EMAIL
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${EMAIL_USERNAME}
spring.mail.password=${EMAIL_APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.starttls.enable=true

# DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet=DEBUG
logging.level.org.springframework.web.client=INFO
logging.level.com.example.gamemate=DEBUG
logging.level.org.springframework.data.redis=INFO
logging.level.com.example.gamemate.domain.notification.service.RedisStreamService=INFO

# Gemini
gemini.api.url=${GEMINI_URL}
gemini.api.key=${GEMINI_KEY}

#S3
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.s3.bucket=${AWS_BUCKET}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.stack.auto=${AWS_STACK_AUTO}

#multipart
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# Lock timeout
spring.jpa.properties.jakarta.persistence.lock.timeout=3000

# Redis
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379

# Jwt Token
jwt.access-token.expiration=3600000
jwt.refresh-token.expiration=604800000
